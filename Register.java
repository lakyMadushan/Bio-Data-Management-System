
import com.sun.glass.events.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class Register extends javax.swing.JFrame implements Runnable{
    int hour, minute, second;
    int year, month, day;
    String displayTime, displayDate;

    /**
     * Creates new form Register
     */
    public Register() {
        
        Thread t = new Thread(this);
        t.start();
        //setUndecorated(true);
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        time_txt = new javax.swing.JLabel();
        date_txt = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        fullname = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        nic = new javax.swing.JTextField();
        desigh = new javax.swing.JTextField();
        serial_key = new javax.swing.JTextField();
        register = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        back_btn = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setMinimumSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Register");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 220, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("USERNAME");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 23));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("FULLNAME");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, 23));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("E-MAIL");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, 23));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CONTACT NO.");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, 23));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ADDRESS");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, 23));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("NIC/PASSPORT/NDL");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, -1, 23));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DESIGHNATION");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, 23));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("SERIAL NO.");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, 23));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("PASSWORD");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, -1, 23));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Time");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        time_txt.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        time_txt.setForeground(new java.awt.Color(255, 255, 255));
        time_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        time_txt.setText("00 : 00 : 00");
        getContentPane().add(time_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 130, 30));

        date_txt.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        date_txt.setForeground(new java.awt.Color(255, 255, 255));
        date_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        date_txt.setText("0000 / 00 / 00");
        getContentPane().add(date_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 130, 30));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Date");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        username.setBackground(new java.awt.Color(204, 204, 204));
        username.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameKeyReleased(evt);
            }
        });
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 376, 30));

        fullname.setBackground(new java.awt.Color(204, 204, 204));
        fullname.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        fullname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fullnameKeyReleased(evt);
            }
        });
        getContentPane().add(fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 376, 30));

        email.setBackground(new java.awt.Color(204, 204, 204));
        email.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailKeyReleased(evt);
            }
        });
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, 376, 30));

        contact.setBackground(new java.awt.Color(204, 204, 204));
        contact.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactKeyReleased(evt);
            }
        });
        getContentPane().add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 270, 376, 30));

        address.setBackground(new java.awt.Color(204, 204, 204));
        address.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressKeyReleased(evt);
            }
        });
        getContentPane().add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 376, 30));

        nic.setBackground(new java.awt.Color(204, 204, 204));
        nic.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nicKeyReleased(evt);
            }
        });
        getContentPane().add(nic, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 376, 30));

        desigh.setBackground(new java.awt.Color(204, 204, 204));
        desigh.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        desigh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                desighKeyReleased(evt);
            }
        });
        getContentPane().add(desigh, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 376, 30));

        serial_key.setBackground(new java.awt.Color(204, 204, 204));
        serial_key.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        serial_key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serial_keyKeyReleased(evt);
            }
        });
        getContentPane().add(serial_key, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 510, 376, 30));

        register.setBackground(new java.awt.Color(255, 51, 51));
        register.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        register.setText("REGISTER");
        register.setContentAreaFilled(false);
        register.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        register.setOpaque(true);
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        getContentPane().add(register, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 620, 160, 40));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("DIGIMAXJAVA EDUCATION LANKA JAVA BATCH 9 (C) All Rights");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 670, 350, -1));

        back_btn.setBackground(new java.awt.Color(153, 153, 153));
        back_btn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        back_btn.setText("BACK");
        back_btn.setContentAreaFilled(false);
        back_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back_btn.setOpaque(true);
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });
        getContentPane().add(back_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 620, 180, 40));

        password.setBackground(new java.awt.Color(204, 204, 204));
        password.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        password.setText("jPasswordField1");
        password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordMouseClicked(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordKeyReleased(evt);
            }
        });
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 570, 376, 30));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/3.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        // TODO add your handling code here:
        
        try {
                        
        String num = contact.getText();
        int charval = num.length(); 
        if(charval > 8 && charval < 15){
            //JOptionPane.showMessageDialog(this,"Valid Number","DONE!",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this,"Invalid Number","ERROR!",JOptionPane.ERROR_MESSAGE);
            contact.setText(null);
            contact.grabFocus();
        }
        
        if(email.getText().contains("@") && email.getText().contains(".")){
            //JOptionPane.showMessageDialog(this,"Valid E-mail","DONE!",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this,"Invalid E-mail","ERROR!",JOptionPane.ERROR_MESSAGE);
            email.setText(null);
            email.grabFocus();
        }
        
         if(nic.getText().trim().matches("[0-9]{12}")){
            //JOptionPane.showMessageDialog(this,"Valid NIC","DONE!",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this,"Invalid NIC","ERROR!",JOptionPane.ERROR_MESSAGE);
            nic.setText(null);
            nic.grabFocus(); 
        }         
             
        if(serial_key.getText().equals("1")){
            JOptionPane.showMessageDialog(this,"You are Admin","ADMIN",JOptionPane.INFORMATION_MESSAGE);
        }else{
            if(serial_key.getText().equals("0")){
                JOptionPane.showMessageDialog(this,"You are Employee","EMPLOYEE",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this,"Invalid number. You must 0(Employee) or 1(Admin)","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        } 
            
            String un = username.getText();
            String fn = fullname.getText();
            String em = email.getText();
            String cn = contact.getText();
            String ad = address.getText();
            String nc = nic.getText();
            String deg = desigh.getText();
            String sk = serial_key.getText();
            String pw = password.getText();
            
            dbcon.IUD("INSERT INTO user(`username`,`full_name`,`email`,`contact_no`,`address`,`nic`,`designation`,`serial_key`,`password`) VALUES ('"+un+"','"+fn+"','"+em+"','"+cn+"','"+ad+"','"+nc+"','"+deg+"','"+sk+"','"+pw+"')");
            
            JOptionPane.showMessageDialog(this,"User registration Successfully!","DONE!",JOptionPane.INFORMATION_MESSAGE);
          
            Login l = new Login();
            l.setVisible(true);
            this.dispose();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_registerActionPerformed

    private void usernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyReleased
        // TODO add your handling code here:
         char letter = evt.getKeyChar();
        if(Character.isLetter(letter) | evt.getKeyCode() == KeyEvent.VK_BACKSPACE ) {
            username.setEditable(true);
        }else{
            username.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only letters,backspace button or delete button.","ERROR!",JOptionPane.ERROR_MESSAGE);
            username.setText(null);
            username.grabFocus();
        }
    }//GEN-LAST:event_usernameKeyReleased

    private void fullnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fullnameKeyReleased
        // TODO add your handling code here:
        char letter = evt.getKeyChar();
        if(Character.isLetter(letter) | evt.getKeyCode() == KeyEvent.VK_SPACE | evt.getKeyCode() == KeyEvent.VK_PERIOD
                | evt.getKeyCode() == KeyEvent.VK_BACKSPACE | evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK | evt.getKeyCode() == KeyEvent.VK_SHIFT | evt.getKeyCode() == KeyEvent.VK_DELETE) {
            fullname.setEditable(true);
        }else{
            fullname.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only letters,space,dot,backspace,shift or caps lock.","ERROR!",JOptionPane.ERROR_MESSAGE);
            fullname.setText(null);
            fullname.grabFocus();
        }
    }//GEN-LAST:event_fullnameKeyReleased

    private void emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyReleased
        // TODO add your handling code here:
        char any = evt.getKeyChar();
        if(Character.isDigit(any)|Character.isLetter(any)|Character.isLowerCase(any)| evt.getKeyCode() == KeyEvent.VK_BACKSPACE | evt.getKeyCode() == KeyEvent.VK_SHIFT | evt.getKeyCode() == KeyEvent.VK_2 | evt.getKeyCode() == KeyEvent.VK_MINUS | evt.getKeyCode() == KeyEvent.VK_DELETE | evt.getKeyCode() == KeyEvent.VK_NUM_LOCK | evt.getKeyCode() == KeyEvent.VK_PERIOD ) {
            email.setEditable(true);
        }else{
            email.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only letters,numbers,backspace,shift,@,dot or Minus keys","ERROR!",JOptionPane.ERROR_MESSAGE);
            email.setText(null);
            email.grabFocus();
        }
    }//GEN-LAST:event_emailKeyReleased

    private void contactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyReleased
        // TODO add your handling code here:
        char digit = evt.getKeyChar();
        if(Character.isDigit(digit)| evt.getKeyCode() == KeyEvent.VK_BACKSPACE | evt.getKeyCode() == KeyEvent.VK_SHIFT | evt.getKeyCode() == KeyEvent.VK_EQUALS | evt.getKeyCode() == KeyEvent.VK_MINUS | evt.getKeyCode() == KeyEvent.VK_DELETE | evt.getKeyCode() == KeyEvent.VK_NUM_LOCK ) {
            contact.setEditable(true);
        }else{
            contact.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only numbers,backspace,shift,Plus or Minus keys","ERROR!",JOptionPane.ERROR_MESSAGE);
            contact.setText(null);
            contact.grabFocus();
        }
    }//GEN-LAST:event_contactKeyReleased

    private void addressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyReleased
        // TODO add your handling code here:
           char letter = evt.getKeyChar();
        if(Character.isLetter(letter) |Character.isDigit(letter) | evt.getKeyCode() == KeyEvent.VK_SPACE | evt.getKeyCode() == KeyEvent.VK_PERIOD
                | evt.getKeyCode() == KeyEvent.VK_BACKSPACE | evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK | evt.getKeyCode() == KeyEvent.VK_SHIFT | evt.getKeyCode() == KeyEvent.VK_DELETE | evt.getKeyCode() == KeyEvent.VK_BACK_SLASH | evt.getKeyCode() == KeyEvent.VK_NUM_LOCK) {
            address.setEditable(true);
        }else{
            address.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only letters,space,dot,backspace,shift,back flash,num lock or caps lock.","ERROR!",JOptionPane.ERROR_MESSAGE);
            address.setText(null);
            address.grabFocus();
        }
    }//GEN-LAST:event_addressKeyReleased

    private void nicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicKeyReleased
        // TODO add your handling code here:
         char digit = evt.getKeyChar();
        if(Character.isDigit(digit)| evt.getKeyCode() == KeyEvent.VK_BACKSPACE  | evt.getKeyCode() == KeyEvent.VK_NUM_LOCK | evt.getKeyCode() == KeyEvent.VK_DELETE | evt.getKeyCode() == KeyEvent.VK_V ) {
            nic.setEditable(true);
            
        }else{
            nic.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only numbers,backspace or V","ERROR!",JOptionPane.ERROR_MESSAGE);
            nic.setText(null);
            nic.grabFocus();
        }
    }//GEN-LAST:event_nicKeyReleased

    private void desighKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desighKeyReleased
        // TODO add your handling code here:
        char letter = evt.getKeyChar();
        if(Character.isLetter(letter) | evt.getKeyCode() == KeyEvent.VK_SPACE | evt.getKeyCode() == KeyEvent.VK_BACKSPACE | evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK | evt.getKeyCode() == KeyEvent.VK_SHIFT | evt.getKeyCode() == KeyEvent.VK_DELETE) {
            desigh.setEditable(true);
        }else{
            desigh.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only letters,space,backspace,shift or caps lock.","ERROR!",JOptionPane.ERROR_MESSAGE);
            desigh.setText(null);
            desigh.grabFocus();
        }
    }//GEN-LAST:event_desighKeyReleased

    private void serial_keyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serial_keyKeyReleased
        // TODO add your handling code here:
        
        if( evt.getKeyCode() == KeyEvent.VK_BACKSPACE  | evt.getKeyCode() == KeyEvent.VK_NUM_LOCK | evt.getKeyCode() == KeyEvent.VK_0 | evt.getKeyCode() == KeyEvent.VK_1 ) {
            serial_key.setEditable(true);
            
        }else{
            serial_key.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only 0 or 1 numbers and backspace,num lock","ERROR!",JOptionPane.ERROR_MESSAGE);
            serial_key.setText(null);
            serial_key.grabFocus();
        }
    }//GEN-LAST:event_serial_keyKeyReleased

    private void passwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyReleased
        // TODO add your handling code here:
         char letter = evt.getKeyChar();
        if(Character.isLetter(letter) |Character.isDigit(letter) | evt.getKeyCode() == KeyEvent.VK_BACKSPACE | evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK | evt.getKeyCode() == KeyEvent.VK_SHIFT  | evt.getKeyCode() == KeyEvent.VK_NUM_LOCK | evt.getKeyCode() == KeyEvent.VK_2 | evt.getKeyCode() == KeyEvent.VK_3) {
            password.setEditable(true);
        }else{
            password.setEditable(false);
            JOptionPane.showMessageDialog(this,"Use only letters,backspace,shift,num 2 and 3,num lock or caps lock.","ERROR!",JOptionPane.ERROR_MESSAGE);
            password.setText(null);
            password.grabFocus();
        }
    }//GEN-LAST:event_passwordKeyReleased

    private void passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordMouseClicked
        // TODO add your handling code here:
        password.setText(null);
    }//GEN-LAST:event_passwordMouseClicked

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        // TODO add your handling code here:
        Login l = new Login();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_back_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Register().setVisible(true);
            }
        });
    }
    public void run() {
        while(true){
            try {
                 Calendar c = Calendar.getInstance();
                 hour = c.get(Calendar.HOUR_OF_DAY);
                 if(hour > 12);
                 hour = hour - 12;
                 minute = c.get(Calendar.MINUTE);
                 second = c.get(Calendar.SECOND);
                 day = c.get(Calendar.DAY_OF_MONTH);
                 month = c.get(Calendar.MONTH);
                 year = c.get(Calendar.YEAR);
                
                 SimpleDateFormat sdf = new SimpleDateFormat("YYYY / MM / dd");
                 SimpleDateFormat sdf1 = new SimpleDateFormat("hh : mm : ss");
                
                 Date d = c.getTime();
                
                 displayDate = sdf.format(d);
                 displayTime = sdf1.format(d);
                
                date_txt.setText(displayDate);
                time_txt.setText(displayTime);
                
            } catch (Exception e) {
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JButton back_btn;
    private javax.swing.JLabel background;
    private javax.swing.JTextField contact;
    private javax.swing.JLabel date_txt;
    private javax.swing.JTextField desigh;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fullname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nic;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton register;
    private javax.swing.JTextField serial_key;
    private javax.swing.JLabel time_txt;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
